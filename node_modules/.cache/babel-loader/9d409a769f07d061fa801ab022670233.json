{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Outcome.js\";\nimport Rock_img from './Rock_img.png';\nimport Paper_img from './Paper_img.png';\nimport Scissors_img from './Scissors_img.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Outcome(props) {\n  let playerAttack = convertAttackToString(props.playerAttack);\n  let computerAttack = convertAttackToString(props.computerAttack);\n  console.log(props.computerAttack);\n\n  function convertAttackToString(attackNum) {\n    if (attackNum != null) {\n      switch (attackNum) {\n        case '0':\n          return 'Rock';\n          break;\n\n        case '1':\n          return 'Paper';\n          break;\n\n        case '2':\n          return 'Scissors';\n          break;\n\n        default:\n          return 'Error';\n      }\n    }\n  }\n\n  let imageToDisplay; // Set the image for the 'button' based on the attack number\n\n  function ReturnImageToDisplay(num) {\n    switch (props.playerAttack) {\n      case '0':\n        imageToDisplay = Rock_img;\n        break;\n\n      case '1':\n        imageToDisplay = Paper_img;\n        break;\n\n      case '2':\n        imageToDisplay = Scissors_img;\n        break;\n    }\n\n    return imageToDisplay;\n  }\n\n  console.log(props.playerAttack);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Match Outcome: \", props.outcome, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Player threw: \", playerAttack, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Computer threw: \", computerAttack, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: ReturnImageToDisplay(props.playerAttack)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Outcome;\nexport default Outcome;\n\nvar _c;\n\n$RefreshReg$(_c, \"Outcome\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Outcome.js"],"names":["Rock_img","Paper_img","Scissors_img","Outcome","props","playerAttack","convertAttackToString","computerAttack","console","log","attackNum","imageToDisplay","ReturnImageToDisplay","num","outcome"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEvB,MAAIC,YAAY,GAAGC,qBAAqB,CAACF,KAAK,CAACC,YAAP,CAAxC;AACA,MAAIE,cAAc,GAAGD,qBAAqB,CAACF,KAAK,CAACG,cAAP,CAA1C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,cAAlB;;AAEA,WAASD,qBAAT,CAA+BI,SAA/B,EAAyC;AACzC,QAAIA,SAAS,IAAI,IAAjB,EAAuB;AACvB,cAAOA,SAAP;AACC,aAAK,GAAL;AACC,iBAAO,MAAP;AACA;;AACD,aAAK,GAAL;AACC,iBAAO,OAAP;AACA;;AACD,aAAK,GAAL;AACC,iBAAO,UAAP;AACA;;AACD;AACA,iBAAO,OAAP;AAXD;AAaC;AACA;;AAEF,MAAIC,cAAJ,CAzBwB,CA0BrB;;AACA,WAASC,oBAAT,CAA8BC,GAA9B,EAAkC;AACnC,YAAOT,KAAK,CAACC,YAAb;AACC,WAAK,GAAL;AACAM,QAAAA,cAAc,GAAGX,QAAjB;AACA;;AACA,WAAK,GAAL;AACAW,QAAAA,cAAc,GAAGV,SAAjB;AACA;;AACA,WAAK,GAAL;AACAU,QAAAA,cAAc,GAAGT,YAAjB;AACA;AATD;;AAWA,WAAOS,cAAP;AACD;;AAECH,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,YAAlB;AAED,sBACC;AAAA,4BACA;AAAA,oCAAqBD,KAAK,CAACU,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,oCAAqBT,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,sCAAuBE,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAK,MAAA,GAAG,EAAEK,oBAAoB,CAACR,KAAK,CAACC,YAAP;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;KApDQF,O;AAsDT,eAAeA,OAAf","sourcesContent":["import Rock_img from './Rock_img.png'\nimport Paper_img from './Paper_img.png'\nimport Scissors_img from './Scissors_img.png'\n\nfunction Outcome(props) {\n\n\tlet playerAttack = convertAttackToString(props.playerAttack);\n\tlet computerAttack = convertAttackToString(props.computerAttack);\n\n\tconsole.log(props.computerAttack);\n\n\tfunction convertAttackToString(attackNum){\n\tif (attackNum != null) {\n\tswitch(attackNum) {\n\t\tcase '0':\n\t\t\treturn 'Rock';\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\treturn 'Paper';\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\treturn 'Scissors';\n\t\t\tbreak;\n\t\tdefault:\n\t\treturn 'Error';\n\t\t}\n\t}\n\t}\n\nlet imageToDisplay;\n\t  // Set the image for the 'button' based on the attack number\n\t  function ReturnImageToDisplay(num){\n  switch(props.playerAttack){\n  \tcase '0':\n  \timageToDisplay = Rock_img;\n  \tbreak;\n  \tcase '1':\n  \timageToDisplay = Paper_img;\n  \tbreak;\n  \tcase '2':\n  \timageToDisplay = Scissors_img;\n  \tbreak;\n  }\n  return imageToDisplay;\n}\n\n  console.log(props.playerAttack);\n\n\treturn (\n\t\t<div> \n\t\t<div>Match Outcome: {props.outcome} </div>\n\t\t<div> Player threw: {playerAttack} </div>\n\t\t<div> Computer threw: {computerAttack} </div>\n\t\t<img src={ReturnImageToDisplay(props.playerAttack)}/>\n\t\t</div>\n\t\t);\n}\n\nexport default Outcome;"]},"metadata":{},"sourceType":"module"}