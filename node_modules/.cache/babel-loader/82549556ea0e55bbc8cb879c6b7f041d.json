{"ast":null,"code":"import _objectSpread from\"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/testEthFaucet/TestEthFaucet/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/testEthFaucet/TestEthFaucet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//import logo from './logo.svg';\nimport'./App.css';//import Outcome from './Components/Outcome';\nimport Donate from'./Components/Donate';import AttackCard from'./Components/AttackCard';import OutcomeCard from'./Components/OutcomeCard';import Web3 from'web3';import React,{useState,useEffect}from'react';import contractABI from'./ABI.json';// Solidity contract ABI\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// ROPSTEN ADDRESS = '0x266B6F8C7C823187d20FEBD47F684F348843501a'\n// GANACHE-CLI address = '0x9F0a8af79eFE24c50fE4E6aF2308F928A75fa617'\nvar contractAddress='0x266B6F8C7C823187d20FEBD47F684F348843501a';// declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),defaultAccount=_useState2[0],setDefaultAccount=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),contractBalance=_useState4[0],setContractBalance=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),matchOutcome=_useState6[0],setMatchOutcome=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),playerAttack=_useState8[0],setPlayerAttack=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),computerAttack=_useState10[0],setComputerAttack=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),RPSContract=_useState12[0],setRPSContract=_useState12[1];// initialize and set state of web3 and contract for uses in app\n// initialize and set state of contract balance and default account\nfunction loadAccount(){if(window.ethereum&&window.ethereum.isMetaMask){console.log('MetaMask detected');window.web3=new Web3(window.ethereum);window.ethereum.send('eth_requestAccounts').then(function(result){console.log(result.result[0]);setDefaultAccount(result.result[0]);window.web3.eth.getBalance(contractAddress).then(function(result){setContractBalance(window.web3.utils.fromWei(result));});setRPSContract(new window.web3.eth.Contract(contractABI,contractAddress));});}else{alert(\"You need to install MetaMask to interact with this app\");}}// initialize web3 and provider connection upon app load\nuseEffect(function(){loadAccount();},[]);// Call when RPSContract is updated\n// sets the event listener and updates match outcome\nuseEffect(function(){//checking for null values to prevent setting the event listener without values initialized\nif(RPSContract!==null&&defaultAccount!==null&&window.web3!==null){// listen for game outcomes where this user's address is the player, update outcome display values\nRPSContract.events.emitOutcome({filter:{player:defaultAccount}},function(error,event){//console.log(event);\n//console.log('event.returnValues.myDataPointName returned ' + event.returnValues.outcome);\nsetMatchOutcome(event.returnValues.outcome);setPlayerAttack(event.returnValues.playerAttack);setComputerAttack(event.returnValues.computerAttack);//console.log('event player: ' + event.returnValues.player);\n//console.log('dfAccount: ' + defaultAccount);\n});// listen to all outcome events, no filters. Update contract balance after each match played by anyone\nRPSContract.events.emitOutcome({},function(error,event){window.web3.eth.getBalance(contractAddress).then(function(result){setContractBalance(window.web3.utils.fromWei(result));});});// update the contract balance whenever a donation event is emitted\nRPSContract.events.emitDonation({},function(error,event){window.web3.eth.getBalance(contractAddress).then(function(result){setContractBalance(window.web3.utils.fromWei(result));});});}},[RPSContract,defaultAccount]);// package props for attack buttons (same props for all buttons)\nvar defaultAttackProps={contract:RPSContract,defaultAccount:defaultAccount};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Title\",children:[\" \",/*#__PURE__*/_jsx(\"h1\",{children:\" Play \"}),/*#__PURE__*/_jsx(\"h2\",{children:\" [Rock, Paper, Scissors] \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"GameWrapper\",children:[/*#__PURE__*/_jsx(Donate,_objectSpread({contractBalance:contractBalance},defaultAttackProps)),/*#__PURE__*/_jsx(OutcomeCard,{outcome:matchOutcome,playerAttack:playerAttack,computerAttack:computerAttack}),/*#__PURE__*/_jsx(AttackCard,_objectSpread({},defaultAttackProps))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/mikec3/TestEthFaucet\",children:\"GitHub\"})}),/*#__PURE__*/_jsx(\"p\",{children:\" Donate to the creator: 0x07Fa7FBff22d6bBcC2f38A29F07B60ef5F4916b3 \"})]})]});}export default App;","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/testEthFaucet/TestEthFaucet/src/App.js"],"names":["Donate","AttackCard","OutcomeCard","Web3","React","useState","useEffect","contractABI","App","contractAddress","defaultAccount","setDefaultAccount","contractBalance","setContractBalance","matchOutcome","setMatchOutcome","playerAttack","setPlayerAttack","computerAttack","setComputerAttack","RPSContract","setRPSContract","loadAccount","window","ethereum","isMetaMask","console","log","web3","send","then","result","eth","getBalance","utils","fromWei","Contract","alert","events","emitOutcome","filter","player","error","event","returnValues","outcome","emitDonation","defaultAttackProps","contract"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n//import Outcome from './Components/Outcome';\nimport Donate from './Components/Donate';\nimport AttackCard from './Components/AttackCard';\nimport OutcomeCard from './Components/OutcomeCard';\nimport Web3 from 'web3';\nimport React, {useState, useEffect} from 'react';\nimport contractABI from './ABI.json'  // Solidity contract ABI\n\nfunction App() {\n\n  // ROPSTEN ADDRESS = '0x266B6F8C7C823187d20FEBD47F684F348843501a'\n  // GANACHE-CLI address = '0x9F0a8af79eFE24c50fE4E6aF2308F928A75fa617'\n  const contractAddress = '0x266B6F8C7C823187d20FEBD47F684F348843501a';\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [contractBalance, setContractBalance] = useState(null);\n\n  const [matchOutcome, setMatchOutcome] = useState(null);\n  const [playerAttack, setPlayerAttack] = useState(null);\n  const [computerAttack, setComputerAttack] = useState(null);\n\n  const [RPSContract, setRPSContract] = useState(null);\n\n  // initialize and set state of web3 and contract for uses in app\n  // initialize and set state of contract balance and default account\n  function loadAccount(){\n\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log('MetaMask detected');\n      window.web3 = new Web3(window.ethereum);\n      window.ethereum.send('eth_requestAccounts')\n      .then(function(result){\n        console.log(result.result[0]);\n        setDefaultAccount(result.result[0]);\n\n    window.web3.eth.getBalance(contractAddress)\n    .then(function(result){\n    setContractBalance(window.web3.utils.fromWei(result));\n    });\n\n    setRPSContract(new window.web3.eth.Contract(contractABI, contractAddress));\n\n      })\n    } else {\n      alert(\"You need to install MetaMask to interact with this app\");\n    }\n  }\n\n  // initialize web3 and provider connection upon app load\n  useEffect(() => {\n    loadAccount();\n  }, []);\n\n// Call when RPSContract is updated\n// sets the event listener and updates match outcome\n  useEffect(() => {\n\n    //checking for null values to prevent setting the event listener without values initialized\n    if(RPSContract !== null && defaultAccount !== null && window.web3 !== null) {\n\n      // listen for game outcomes where this user's address is the player, update outcome display values\n      RPSContract.events.emitOutcome({filter: {player: defaultAccount}}, function(error, event){\n      //console.log(event);\n      //console.log('event.returnValues.myDataPointName returned ' + event.returnValues.outcome);\n      setMatchOutcome(event.returnValues.outcome);\n      setPlayerAttack(event.returnValues.playerAttack);\n      setComputerAttack(event.returnValues.computerAttack);\n      //console.log('event player: ' + event.returnValues.player);\n      //console.log('dfAccount: ' + defaultAccount);\n    });\n\n      // listen to all outcome events, no filters. Update contract balance after each match played by anyone\n    RPSContract.events.emitOutcome({}, function(error, event){\n      window.web3.eth.getBalance(contractAddress)\n      .then(function(result){\n        setContractBalance(window.web3.utils.fromWei(result));\n      });\n    });\n\n      // update the contract balance whenever a donation event is emitted\n    RPSContract.events.emitDonation({}, function(error, event){\n      window.web3.eth.getBalance(contractAddress)\n      .then(function(result){\n        setContractBalance(window.web3.utils.fromWei(result));\n      });\n    });\n    }\n  }, [RPSContract, defaultAccount]);\n\n  // package props for attack buttons (same props for all buttons)\n  let defaultAttackProps = {\n    contract: RPSContract,\n    defaultAccount: defaultAccount\n  }\n\n \n\nreturn (\n<div>\n<div className='Title'> <h1> Play </h1>\n                        <h2> [Rock, Paper, Scissors] </h2> \n  </div>\n<div className='GameWrapper'>\n  <Donate contractBalance={contractBalance} {...defaultAttackProps}/>\n  <OutcomeCard outcome = {matchOutcome} playerAttack={playerAttack} computerAttack={computerAttack} />\n  <AttackCard {...defaultAttackProps}/>\n</div>\n<div>\n<p><a href='https://github.com/mikec3/TestEthFaucet'>GitHub</a></p>\n  <p> Donate to the creator: 0x07Fa7FBff22d6bBcC2f38A29F07B60ef5F4916b3 </p>\n</div>\n</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}