{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Account from './Components/Account';\nimport Outcome from './Components/Outcome';\nimport Web3 from 'web3';\nimport React, { useState, useEffect } from 'react';\nimport contractABI from './ABI.json'; // Solidity contract ABI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [matchOutcome, setMatchOutcome] = useState(null);\n  const [RPSContract, setRPSContract] = useState(null);\n\n  function loadAccount() {\n    let web3;\n\n    if (typeof web3 !== 'undefined') {\n      web3 = new Web3(Web3.givenProvider);\n    } else {\n      // IMPORTANT!!\n      // USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n      web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n    }\n\n    web3.eth.getAccounts().then(function (result) {\n      setDefaultAccount(result[0]);\n    });\n    setRPSContract(new web3.eth.Contract(contractABI, '0xa326a1aD5a42E1EB3B980eb8509207560FdF920c'));\n  }\n\n  useEffect(() => {\n    loadAccount();\n  }, []); // Call when RPSContract is updated\n\n  useEffect(() => {\n    console.log(RPSContract);\n\n    if (RPSContract !== null) {\n      RPSContract.events.emitOutcome({}, function (error, event) {\n        console.log(event);\n        console.log('event.returnValues.myDataPointName returned ' + event.returnValues.outcome);\n        setMatchOutcome(event.returnValues.outcome);\n      });\n    }\n  }, [RPSContract]);\n\n  function rockClickHandler(attack) {\n    console.log('rock!');\n    RPSContract.methods.play(attack).send({\n      from: defaultAccount\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Account, {\n      defaultAccount: defaultAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: 0,\n      onClick: e => {\n        rockClickHandler(e.target.value);\n      },\n      children: \" Play Rock \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Outcome, {\n      outcome: matchOutcome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"UxYUxXTWDi5RAZgDSJ81oeynZ9g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/App.js"],"names":["Account","Outcome","Web3","React","useState","useEffect","contractABI","App","defaultAccount","setDefaultAccount","matchOutcome","setMatchOutcome","RPSContract","setRPSContract","loadAccount","web3","givenProvider","providers","WebsocketProvider","eth","getAccounts","then","result","Contract","console","log","events","emitOutcome","error","event","returnValues","outcome","rockClickHandler","attack","methods","play","send","from","e","target","value"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CAAsC;;;;AAEtC,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;;AAEA,WAASU,WAAT,GAAsB;AAEpB,QAAIC,IAAJ;;AAEA,QAAG,OAAOA,IAAP,KAAgB,WAAnB,EAA+B;AAC7BA,MAAAA,IAAI,GAAG,IAAIb,IAAJ,CAASA,IAAI,CAACc,aAAd,CAAP;AACD,KAFD,MAEO;AACL;AACA;AACAD,MAAAA,IAAI,GAAG,IAAIb,IAAJ,CAAS,IAAIA,IAAI,CAACe,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAT,CAAP;AACD;;AAEDH,IAAAA,IAAI,CAACI,GAAL,CAASC,WAAT,GACCC,IADD,CACM,UAASC,MAAT,EAAgB;AACpBb,MAAAA,iBAAiB,CAACa,MAAM,CAAC,CAAD,CAAP,CAAjB;AACD,KAHD;AAKAT,IAAAA,cAAc,CAAC,IAAIE,IAAI,CAACI,GAAL,CAASI,QAAb,CAAsBjB,WAAtB,EAAmC,4CAAnC,CAAD,CAAd;AACD;;AAEDD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CA7Ba,CAiCf;;AACET,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;;AAEA,QAAGA,WAAW,KAAK,IAAnB,EAAyB;AACnBA,MAAAA,WAAW,CAACc,MAAZ,CAAmBC,WAAnB,CAA+B,EAA/B,EAAmC,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AAC7DL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,iDAAiDI,KAAK,CAACC,YAAN,CAAmBC,OAAhF;AACApB,QAAAA,eAAe,CAACkB,KAAK,CAACC,YAAN,CAAmBC,OAApB,CAAf;AACD,OAJK;AAKL;AACF,GAVQ,EAUN,CAACnB,WAAD,CAVM,CAAT;;AAYA,WAASoB,gBAAT,CAA0BC,MAA1B,EAAiC;AAC/BT,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAb,IAAAA,WAAW,CAACsB,OAAZ,CAAoBC,IAApB,CAAyBF,MAAzB,EAAiCG,IAAjC,CAAsC;AAACC,MAAAA,IAAI,EAAE7B;AAAP,KAAtC;AACD;;AAEH,sBACA;AAAA,4BACA,QAAC,OAAD;AAAS,MAAA,cAAc,EAAIA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAkB,MAAA,OAAO,EAAE8B,CAAC,IAAI;AAACN,QAAAA,gBAAgB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAiC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,OAAD;AAAS,MAAA,OAAO,EAAI9B;AAApB;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOC;;GA1DQH,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Account from './Components/Account';\nimport Outcome from './Components/Outcome';\nimport Web3 from 'web3';\nimport React, {useState, useEffect} from 'react';\nimport contractABI from './ABI.json'  // Solidity contract ABI\n\nfunction App() {\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  const [matchOutcome, setMatchOutcome] = useState(null);\n\n  const [RPSContract, setRPSContract] = useState(null);\n\n  function loadAccount(){\n\n    let web3;\n\n    if(typeof web3 !== 'undefined'){\n      web3 = new Web3(Web3.givenProvider);\n    } else {\n      // IMPORTANT!!\n      // USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n      web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n    }\n\n    web3.eth.getAccounts()\n    .then(function(result){\n      setDefaultAccount(result[0]);\n    });\n\n    setRPSContract(new web3.eth.Contract(contractABI, '0xa326a1aD5a42E1EB3B980eb8509207560FdF920c'));\n  }\n\n  useEffect(() => {\n    loadAccount();\n  }, []);\n\n// Call when RPSContract is updated\n  useEffect(() => {\n    console.log(RPSContract);\n\n    if(RPSContract !== null) {\n          RPSContract.events.emitOutcome({}, function(error, event){\n      console.log(event);\n      console.log('event.returnValues.myDataPointName returned ' + event.returnValues.outcome);\n      setMatchOutcome(event.returnValues.outcome);\n    });\n    }\n  }, [RPSContract]);\n\n  function rockClickHandler(attack){\n    console.log('rock!');\n    RPSContract.methods.play(attack).send({from: defaultAccount});\n  }\n\nreturn (\n<div>\n<Account defaultAccount = {defaultAccount}/>\n<button value={0} onClick={e => {rockClickHandler(e.target.value)}}> Play Rock </button>\n<Outcome outcome = {matchOutcome}/>\n</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}