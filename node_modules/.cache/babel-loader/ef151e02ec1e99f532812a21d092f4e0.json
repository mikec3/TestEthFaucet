{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Outcome.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Outcome(props) {\n  let playerAttack = convertAttackToString(props.playerAttack);\n  let computerAttack = convertAttackToString(props.computerAttack);\n  console.log(props.computerAttack);\n\n  function convertAttackToString(attackNum) {\n    if (attackNum != null) {\n      switch (attackNum) {\n        case '0':\n          return 'Rock';\n          break;\n\n        case '1':\n          return 'Paper';\n          break;\n\n        case '2':\n          return 'Scissors';\n          break;\n\n        default:\n          return 'Error';\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Match Outcome: \", props.outcome, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Player threw: \", playerAttack, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Computer threw: \", computerAttack, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Outcome;\nexport default Outcome;\n\nvar _c;\n\n$RefreshReg$(_c, \"Outcome\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Outcome.js"],"names":["Outcome","props","playerAttack","convertAttackToString","computerAttack","console","log","attackNum","outcome"],"mappings":";;;AAEA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAEvB,MAAIC,YAAY,GAAGC,qBAAqB,CAACF,KAAK,CAACC,YAAP,CAAxC;AACA,MAAIE,cAAc,GAAGD,qBAAqB,CAACF,KAAK,CAACG,cAAP,CAA1C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,cAAlB;;AAEA,WAASD,qBAAT,CAA+BI,SAA/B,EAAyC;AACzC,QAAIA,SAAS,IAAI,IAAjB,EAAuB;AACvB,cAAOA,SAAP;AACC,aAAK,GAAL;AACC,iBAAO,MAAP;AACA;;AACD,aAAK,GAAL;AACC,iBAAO,OAAP;AACA;;AACD,aAAK,GAAL;AACC,iBAAO,UAAP;AACA;;AACD;AACA,iBAAO,OAAP;AAXD;AAaC;AACA;;AAED,sBACC;AAAA,4BACA;AAAA,oCAAqBN,KAAK,CAACO,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,oCAAqBN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,sCAAuBE,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;KAhCQJ,O;AAkCT,eAAeA,OAAf","sourcesContent":["\n\nfunction Outcome(props) {\n\n\tlet playerAttack = convertAttackToString(props.playerAttack);\n\tlet computerAttack = convertAttackToString(props.computerAttack);\n\n\tconsole.log(props.computerAttack);\n\n\tfunction convertAttackToString(attackNum){\n\tif (attackNum != null) {\n\tswitch(attackNum) {\n\t\tcase '0':\n\t\t\treturn 'Rock';\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\treturn 'Paper';\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\treturn 'Scissors';\n\t\t\tbreak;\n\t\tdefault:\n\t\treturn 'Error';\n\t\t}\n\t}\n\t}\n\n\treturn (\n\t\t<div> \n\t\t<div>Match Outcome: {props.outcome} </div>\n\t\t<div> Player threw: {playerAttack} </div>\n\t\t<div> Computer threw: {computerAttack} </div>\n\t\t</div>\n\t\t);\n}\n\nexport default Outcome;"]},"metadata":{},"sourceType":"module"}