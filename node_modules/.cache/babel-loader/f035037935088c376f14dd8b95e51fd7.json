{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Account from './Components/Account';\nimport Web3 from 'web3';\nimport React, { useState, useEffect } from 'react';\nimport contractABI from './ABI.json'; // Solidity contract ABI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  function loadAccount() {\n    let web3;\n\n    if (typeof web3 !== 'undefined') {\n      web3 = new Web3(Web3.givenProvider);\n    } else {\n      // IMPORTANT!!\n      // USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n      web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n    }\n\n    web3.eth.getAccounts().then(function (result) {\n      setDefaultAccount(result[0]);\n    });\n    var RPSContract = new web3.eth.Contract(contractABI, '0xa326a1aD5a42E1EB3B980eb8509207560FdF920c');\n    console.log(RPSContract);\n    RPSContract.events.emitOutcome({}, function (error, event) {\n      console.log(event);\n      console.log('event.returnValues.myDataPointName returned ' + event.returnValues.outcome);\n    });\n  }\n\n  useEffect(() => {\n    loadAccount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Account, {\n      defaultAccount: defaultAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"8IMIeZi+QsMtrY3+fu5K0VRsgn4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/App.js"],"names":["Account","Web3","React","useState","useEffect","contractABI","App","defaultAccount","setDefaultAccount","loadAccount","web3","givenProvider","providers","WebsocketProvider","eth","getAccounts","then","result","RPSContract","Contract","console","log","events","emitOutcome","error","event","returnValues","outcome"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CAAsC;;;;AAEtC,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,IAAD,CAApD;;AAEA,WAASM,WAAT,GAAsB;AAEpB,QAAIC,IAAJ;;AAEA,QAAG,OAAOA,IAAP,KAAgB,WAAnB,EAA+B;AAC7BA,MAAAA,IAAI,GAAG,IAAIT,IAAJ,CAASA,IAAI,CAACU,aAAd,CAAP;AACD,KAFD,MAEO;AACL;AACA;AACAD,MAAAA,IAAI,GAAG,IAAIT,IAAJ,CAAS,IAAIA,IAAI,CAACW,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAT,CAAP;AACD;;AAEDH,IAAAA,IAAI,CAACI,GAAL,CAASC,WAAT,GACCC,IADD,CACM,UAASC,MAAT,EAAgB;AACpBT,MAAAA,iBAAiB,CAACS,MAAM,CAAC,CAAD,CAAP,CAAjB;AACD,KAHD;AAKA,QAAIC,WAAW,GAAG,IAAIR,IAAI,CAACI,GAAL,CAASK,QAAb,CAAsBd,WAAtB,EAAmC,4CAAnC,CAAlB;AAEAe,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEAA,IAAAA,WAAW,CAACI,MAAZ,CAAmBC,WAAnB,CAA+B,EAA/B,EAAmC,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AACvDL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAiDI,KAAK,CAACC,YAAN,CAAmBC,OAAhF;AACD,KAHD;AAID;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIF,sBACA;AAAA,2BACA,QAAC,OAAD;AAAS,MAAA,cAAc,EAAIF;AAA3B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAKC;;GAzCQD,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Account from './Components/Account';\nimport Web3 from 'web3';\nimport React, {useState, useEffect} from 'react';\nimport contractABI from './ABI.json'  // Solidity contract ABI\n\nfunction App() {\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  function loadAccount(){\n\n    let web3;\n\n    if(typeof web3 !== 'undefined'){\n      web3 = new Web3(Web3.givenProvider);\n    } else {\n      // IMPORTANT!!\n      // USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n      web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n    }\n\n    web3.eth.getAccounts()\n    .then(function(result){\n      setDefaultAccount(result[0]);\n    });\n\n    var RPSContract = new web3.eth.Contract(contractABI, '0xa326a1aD5a42E1EB3B980eb8509207560FdF920c');\n\n    console.log(RPSContract);\n\n    RPSContract.events.emitOutcome({}, function(error, event){\n      console.log(event);\n      console.log('event.returnValues.myDataPointName returned ' + event.returnValues.outcome);\n    });\n  }\n\n  useEffect(() => {\n    loadAccount();\n  }, []);\n\nreturn (\n<div>\n<Account defaultAccount = {defaultAccount}/>\n</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}