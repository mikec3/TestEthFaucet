{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Account from './Components/Account';\nimport Web3 from 'web3';\nimport React, { useState, useEffect } from 'react';\nimport contractABI from './ABI.json'; // Solidity contract ABI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [web3, setWeb3] = useState(null); // get the user account\n\n  function loadBlockchainData() {\n    //const PLeb3 = setWeb3(new Web3(Web3.currentProvider)) || setWeb3(new Web3.providers.WebsocketProvider(\"ws://localhost:8545\"));\n    if (typeof web3 !== 'undefined') {\n      setWeb3(new Web3(Web3.currentProvider));\n    } else {\n      setWeb3(new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545')));\n    }\n\n    console.log(web3); //var RPSContract = new web3.eth.Contract(contractABI, '0x292e75fe7450dD6E011368437663AF463FEeedd3');\n    // web3.eth.getAccounts()\n    // .then(function(result){\n    //   setDefaultAccount(result[0]);\n    //   //console.log('Default Account: ' + defaultAccount);\n    // });\n  } // React Hook that runs first time app is rendered\n\n\n  useEffect(() => {\n    loadBlockchainData();\n    console.log(contractABI);\n    console.log(web3);\n  }, []);\n  useEffect(() => {\n    console.log(web3);\n  }, [web3]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Account, {\n      account: defaultAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"cDVGh1j5vGJotrs/KFpQakDFWiw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/App.js"],"names":["Account","Web3","React","useState","useEffect","contractABI","App","defaultAccount","setDefaultAccount","web3","setWeb3","loadBlockchainData","currentProvider","providers","WebsocketProvider","console","log"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CAAsC;;;;AAEtC,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC,CALa,CAOb;;AACA,WAASQ,kBAAT,GAA8B;AAC9B;AAEA,QAAG,OAAOF,IAAP,KAAgB,WAAnB,EAA+B;AAC7BC,MAAAA,OAAO,CAAC,IAAIT,IAAJ,CAASA,IAAI,CAACW,eAAd,CAAD,CAAP;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAAC,IAAIT,IAAJ,CAAS,IAAIA,IAAI,CAACY,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAT,CAAD,CAAP;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAT8B,CAU9B;AAEA;AACA;AACA;AACA;AACA;AACD,GAzBc,CA2Bf;;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,kBAAkB;AAClBI,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAED,GALQ,EAKN,EALM,CAAT;AAOAL,EAAAA,SAAS,CAAC,MAAM;AAChBW,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACC,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAKA,sBACA;AAAA,2BACA,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAKC;;GA7CQD,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Account from './Components/Account';\nimport Web3 from 'web3';\nimport React, {useState, useEffect} from 'react';\nimport contractABI from './ABI.json'  // Solidity contract ABI\n\nfunction App() {\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  const [web3, setWeb3] = useState(null);\n\n  // get the user account\n  function loadBlockchainData() {\n  //const PLeb3 = setWeb3(new Web3(Web3.currentProvider)) || setWeb3(new Web3.providers.WebsocketProvider(\"ws://localhost:8545\"));\n\n  if(typeof web3 !== 'undefined'){\n    setWeb3(new Web3(Web3.currentProvider));\n  } else {\n    setWeb3(new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545')));\n  }\n\n  console.log(web3);\n  //var RPSContract = new web3.eth.Contract(contractABI, '0x292e75fe7450dD6E011368437663AF463FEeedd3');\n\n  // web3.eth.getAccounts()\n  // .then(function(result){\n  //   setDefaultAccount(result[0]);\n  //   //console.log('Default Account: ' + defaultAccount);\n  // });\n}\n\n// React Hook that runs first time app is rendered\nuseEffect(() => {\n  loadBlockchainData();\n  console.log(contractABI);\n  console.log(web3);\n\n}, []); \n\nuseEffect(() => {\nconsole.log(web3);\n}, [web3]);\n\n\nreturn (\n<div>\n<Account account={defaultAccount}/>\n</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}