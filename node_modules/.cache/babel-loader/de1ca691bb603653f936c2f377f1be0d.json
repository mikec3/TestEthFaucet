{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Account.js\";\n//import './node_modules/web3/dist/web3.min.js';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account(props) {\n  // if there is no web3 injected (MetaMask) then look at localhost for web3 (ganache)\n  if (typeof Web3 !== 'undefined') {\n    Web3 = new Web3(Web3.currentProvider);\n  } else {\n    // IMPORTANT!!\n    // USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n    Web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Account is here! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Account.js"],"names":["Web3","Account","props","currentProvider","providers","WebsocketProvider"],"mappings":";AACA;AAEA,OAAOA,IAAP,MAAiB,MAAjB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAErB;AACD,MAAG,OAAOF,IAAP,KAAgB,WAAnB,EAA+B;AAC9BA,IAAAA,IAAI,GAAG,IAAIA,IAAJ,CAASA,IAAI,CAACG,eAAd,CAAP;AACA,GAFD,MAEO;AACN;AACA;AACAH,IAAAA,IAAI,GAAG,IAAIA,IAAJ,CAAS,IAAIA,IAAI,CAACI,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAT,CAAP;AACA;;AAEF,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGA;;KAdQJ,O;AAgBT,eAAeA,OAAf","sourcesContent":["\n//import './node_modules/web3/dist/web3.min.js';\n\nimport Web3 from 'web3'\n\nfunction Account(props) {\n\n\t\t\t// if there is no web3 injected (MetaMask) then look at localhost for web3 (ganache)\n\t\tif(typeof Web3 !== 'undefined'){\n\t\t\tWeb3 = new Web3(Web3.currentProvider);\n\t\t} else {\n\t\t\t// IMPORTANT!!\n\t\t\t// USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n\t\t\tWeb3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n\t\t}\n\n\treturn (\n\t\t<div> Account is here! </div>\n\t\t);\n}\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}