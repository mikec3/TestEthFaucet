{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Account.js\",\n    _s = $RefreshSig$();\n\nimport Web3 from 'web3';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  function loadAccount() {\n    let web3;\n\n    if (typeof Web3 !== 'undefined') {\n      web3 = new Web3(Web3.givenProvider);\n    } else {\n      // IMPORTANT!!\n      // USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n      web3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n    }\n\n    console.log(web3.currentProvider);\n    web3.eth.getAccounts().then(function (result) {\n      setDefaultAccount(result[0]);\n    });\n  }\n\n  useEffect(() => {\n    loadAccount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" Account is here! \", defaultAccount]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Account, \"8IMIeZi+QsMtrY3+fu5K0VRsgn4=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/Mike_and_Tony/rock_paper_scissors_v2/react_rps/src/Components/Account.js"],"names":["Web3","React","useState","useEffect","Account","defaultAccount","setDefaultAccount","loadAccount","web3","givenProvider","providers","WebsocketProvider","console","log","currentProvider","eth","getAccounts","then","result"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,IAAD,CAApD;;AAEA,WAASK,WAAT,GAAsB;AAErB,QAAIC,IAAJ;;AAED,QAAG,OAAOR,IAAP,KAAgB,WAAnB,EAA+B;AAC9BQ,MAAAA,IAAI,GAAG,IAAIR,IAAJ,CAASA,IAAI,CAACS,aAAd,CAAP;AACA,KAFD,MAEO;AACN;AACA;AACAD,MAAAA,IAAI,GAAG,IAAIR,IAAJ,CAAS,IAAIA,IAAI,CAACU,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAT,CAAP;AACA;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,eAAjB;AAEAN,IAAAA,IAAI,CAACO,GAAL,CAASC,WAAT,GACCC,IADD,CACM,UAASC,MAAT,EAAgB;AACrBZ,MAAAA,iBAAiB,CAACY,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA,KAHD;AAIC;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,WAAW;AACX,GAFQ,EAEN,EAFM,CAAT;AAID,sBACC;AAAA,qCAAwBF,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAIA;;GAjCQD,O;;KAAAA,O;AAmCT,eAAeA,OAAf","sourcesContent":["import Web3 from 'web3';\nimport React, {useState, useEffect} from 'react';\n\nfunction Account() {\n\n  // declare hook for setting the defaultAccount. App will re-render after calling setDefaultAccount(myNewDefaultAccount)\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  function loadAccount(){\n\n  \tlet web3;\n\n\t\tif(typeof Web3 !== 'undefined'){\n\t\t\tweb3 = new Web3(Web3.givenProvider);\n\t\t} else {\n\t\t\t// IMPORTANT!!\n\t\t\t// USED WebsocketProvider instead of httpProvider due to event listening only happening on ws\n\t\t\tweb3 = new Web3(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n\t\t}\n\n\t\tconsole.log(web3.currentProvider);\n\n\t\tweb3.eth.getAccounts()\n\t\t.then(function(result){\n\t\t\tsetDefaultAccount(result[0]);\n\t\t});\n  }\n\n  useEffect(() => {\n  \tloadAccount();\n  }, []);\n\n\treturn (\n\t\t<div> Account is here! {defaultAccount}\n\t\t</div>\n\t\t);\n}\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}